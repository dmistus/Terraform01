# Terraform01
Terraform01

* Скачайте и установите Terraform версии =1.5.Х

![](images/2024-02-29_16-29.png)

*     Изучите файл .gitignore. В каком terraform-файле, согласно этому .gitignore, допустимо сохранить личную, секретную информацию?

допустимо сохранить личную, секретную информацию в файле personal.auto.tfvars


*  Найдите в state-файле секретное содержимое созданного ресурса random_password, пришлите в качестве
ответа конкретный ключ и его значение.


"result": "86GH2fCRI0WwQv42"

* Раскомментируйте блок кода, примерно расположенный на строчках 29–42 файла main.tf

**docker_image я изменил на ubuntu (какие-то проблемы ,у меня, сo скачиванием образа nginx).**

Ошибка: отсутствует имя для ресурса. В ресурсе "docker_image" Все блоки ресурсов должны иметь 2 метки (тип, название).

Ошибка: неверное имя ресурса. В ресурсе “docker_container” “1nginx”: Имя должно начинаться с буквы или символа подчеркивания и
может содержать только буквы, цифры, символы подчеркивания и тире. 
«docker_container» «nginx»: 

Ошибка: name = "example_${random_password.random_string_FAKE.resulT}" Управляемый ресурс "random_password" "random_string_FAKE" не был объявлен в корневом модуле.

* Выполните код. В качестве ответа приложите вывод команды docker ps.
![](images/2024-02-29_22-44.png)









![](images/2024-02-29_20-04.png)

* Замените имя docker-контейнера в блоке кода на hello_world

![](images/2024-03-02_02-04.png)
* 
Опасность применения ключа -auto-approve что никто не может изменить нашу инфраструктуру за пределами нашего рабочего процесса Terraform. Это сводит к минимуму риск непредсказуемых изменений и дрейфа конфигурации.-auto-approve Пропускает интерактивное утверждение плана перед применением. Этот параметр игнорируется, когда мы передаем ранее сохраненный файл плана, потому что Terraform считает, что мы передаем файл плана как утверждение, и поэтому никогда не будет запрашивать в этом случае. 

![](images/2024-03-02_02-21.png)


* Уничтожьте созданные ресурсы с помощью terraform
![](images/2024-03-02_02-35.png)

* Объясните, почему при этом не был удалён docker-образ
![](images/2024-03-02_02-39.png)


![](images/2024-03-02_02-40.png)

Так как у нас прописано в файле main.tf keep_locally (логическое значение) true, значит образ Docker не будет удален при операции уничтожения.
